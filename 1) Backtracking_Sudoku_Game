//Given a 9*9 sudoku board, in which some entries are filled and others are 0 (0 indicates that the cell is empty),
//you need to find out whether the Sudoku puzzle can be solved or not i.e. return true or false.

bool isValid(int board[][9], int row, int col, int c) {
        for(int i=0; i<9; i++) {
            if(board[i][col] == c) return false;
            
            if(board[row][i] == c) return false;
            
            if(board[3 * (row/3) + i/3][3 * (col/3) + i%3] == c) return false;
        }
        return true;
    }
    
    bool sudokuSolver(int board[][9]) {
        for(int i=0; i<9; i++) {
            for(int j=0; j<9; j++) {
                
                if(board[i][j] == 0) {
                    for(int c=1; c<=9; c++) {
                        
                        if(isValid(board, i, j, c)) {
                            board[i][j] = c;
                            
                            if(sudokuSolver(board) == true) 
                                return true;
                            
                            else board[i][j] = 0;
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    
    //main function
    #include<iostream>
    using namespace std;
    #include "Solution.h"

    int main(){

      int n = 9; 
      int board[9][9];
      for(int i = 0; i < n ;i++){
      for(int j = 0; j < n; j++){
              cin >> board[i][j];
            }		
      }
      if(sudokuSolver(board)){
      cout << "true";	
      }else{
      cout << "false";	
      }
    }


